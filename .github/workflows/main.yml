name: Test your repo manifest repository

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'twrp-12.1'
      CHOICE:
        type: choice
        description: 'ROM or Local Manifest'
        options:
        - ROM_MANIFEST
        - LOCAL_MANIFEST 
      GIT_USERNAME:
        description: 'GIT_USERNAME'
        required: true
        default: 'sounddrill31'
      GIT_EMAIL:
        description: 'GIT_EMAIL'
        required: true
        default: 'sounddrill31@gmail.com'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install repo tool
        run: |
          sudo apt-get update
          sudo apt-get install -y git-core python3-pip wget
          wget https://storage.googleapis.com/git-repo-downloads/repo && sudo mv repo /usr/bin/repo && sudo chmod a+x /usr/bin/repo
      - name: Initialize and Sync Repo for ROM Manifest
        if: ${{ inputs.choice }} == ROM_MANIFEST
        run: |
          mkdir workspace
          cd workspace
          echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
          git config --global user.name ${{ github.event.inputs.GIT_USERNAME }}
          git config --global user.email ${{ github.event.inputs.GIT_EMAIL }}
          repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
          timeout 1m repo sync || true
        timeout-minutes: 6
      - name: Initialize and Sync Repo for Local Manifest
        if: ${{ inputs.choice }} == ROM_MANIFEST
        run: |
          mkdir workspace
          cd workspace
          echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
          git config --global user.name ${{ github.event.inputs.GIT_USERNAME }}
          git config --global user.email ${{ github.event.inputs.GIT_EMAIL }}
          git clone ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
          mv */*.xml manifest.xml
          repo init --depth=1 -m manifest.xml
          timeout 1m repo sync || true
        timeout-minutes: 6
        id: pwd